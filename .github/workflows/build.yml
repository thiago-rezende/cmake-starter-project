name: CI/CD

on: [push]

env:
  CMAKE_CONFIG_TYPE: Release
  USE_MSVC_STATIC_RUNTIME: OFF
  BUILD_DOCUMENTATION: OFF

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      ###########
      ## Build ##
      ###########
      - name: Create Build Environment
        run: cmake -E make_directory ${{ runner.workspace }}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{ runner.workspace }}/build
        run: |
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ env.CMAKE_CONFIG_TYPE }} \
          -DUSE_MSVC_STATIC_RUNTIME=${{ env.USE_MSVC_STATIC_RUNTIME }} \
          -DBUILD_DOCUMENTATION=${{ env.BUILD_DOCUMENTATION }}

      - name: Build
        working-directory: ${{ runner.workspace }}/build
        shell: bash
        run: cmake --build . --config ${{ env.CMAKE_CONFIG_TYPE }}

      ###########
      ## Cache ##
      ###########
      - name: Cache Build
        uses: actions/cache@v2
        with:
          path: |
            ${{ runner.workspace }}/build
          key: ${{ matrix.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ matrix.os }}-build-${{ github.sha }}

  test:
    needs: build

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      ###########
      ## Cache ##
      ###########
      - name: Cache Build
        uses: actions/cache@v2
        with:
          path: |
            ${{ runner.workspace }}/build
          key: ${{ matrix.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ matrix.os }}-build-${{ github.sha }}

      ##########
      ## Test ##
      ##########
      - name: Test
        working-directory: ${{ runner.workspace }}/build
        shell: bash
        run: ctest . -C ${{ env.CMAKE_CONFIG_TYPE }}

  docs:
    needs: test

    strategy:
      matrix:
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      ###########
      ## Setup ##
      ###########
      - name: Setup Doxygen
        shell: bash
        run: |
          sudo apt-get install -y doxygen graphviz

      ###########
      ## Cache ##
      ###########
      - name: Cache Build
        uses: actions/cache@v2
        with:
          path: |
            ${{ runner.workspace }}/build
          key: ${{ matrix.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ matrix.os }}-build-${{ github.sha }}

      ###########
      ## Build ##
      ###########
      - name: Configure CMake
        shell: bash
        working-directory: ${{ runner.workspace }}/build
        run: |
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ env.CMAKE_CONFIG_TYPE }} \
          -DUSE_MSVC_STATIC_RUNTIME=${{ env.USE_MSVC_STATIC_RUNTIME }} \
          -DBUILD_DOCUMENTATION=ON

      - name: Build
        working-directory: ${{ runner.workspace }}/build
        shell: bash
        run: cmake --build . --config ${{ env.CMAKE_CONFIG_TYPE }}

      - name: GitHub Pages [main]
        if: github.ref == "refs/heads/main"
        uses: peaceiris/actions-gh-pages@v3.7.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ runner.workspace }}//build/docs/doxygen/html
          destination_dir: main
          commit_message: ${{ github.event.head_commit.message }}

      - name: GitHub Pages [develop]
        if: github.ref == "refs/heads/develop"
        uses: peaceiris/actions-gh-pages@v3.7.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ runner.workspace }}//build/docs/doxygen/html
          destination_dir: develop
          commit_message: ${{ github.event.head_commit.message }}
